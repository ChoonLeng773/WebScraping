,star_ratings,review,reviewer,review_date
0,5,"The programming languages courses are by far the best Coursera courses that I've seen in my life.The teacher is passionate and really wants to teach programming 'idioms'. The syntax of a language, or the structure for that matter are not as relevant as the underlying idea. With this course you will learn to recognize the underlying patterns of programming. These patters will always be usefull, no matter the language or environment. I highly reccomend this course. ",By Arent S,"Feb 3, 2019"
1,5,"This course was awesome. I would caution you to take Dan's claim that ""Part A is almost as substantial as Part B and Part C combined"" with a grain of salt. This couldn't be further from the truth. Parts B and C are challenging, with the difficulty increasing as you progress further into the course. This makes the three part series an exceptional value. ",By Julie L,"Jun 5, 2019"
2,5,"Nice follow-up to the first course. I've seen Racket before, but seeing Racket structs used the way they were - relating them to ""creating a new datatype"" -  was an ""aha"" moment for me. It was also good for me to finally learn a little about about what ""macro hygiene"" was all about; how to use memoization; and to get some practice with streams. They also weren't kidding when they said that ""debugging an interpreter is an acquired skill"" :) Finally, the material on the soundness and completeness of a static type-checker was completely new to me, but I liked those concepts. The only caveat is that you should've taken Part A before, since this course often makes heavy, non-trivial references to ML, and other ideas taught in that course.",By Brandon I,"Feb 18, 2020"
3,5,"This is a great programming course. The instructor explained the key concepts extremely clear and concise. I found this course when reading the well-known SICP book (Structure and Interpretation of Computer Programs), and I was trying to pick up a scheme dialect, and found that several people suggest racket.However, the course is actually more interesting than racket itself. It covers lots of functional programming idioms, in a precise and systematic way. Also some concepts where I read in other places informally, such as ""thunk"", ""lazy evaluation"", ""infinite stream"" are explained with great clarity. It also makes reading SICP much easier.I wish there could be more courses like this in Coursera.",By xinxiao,"Aug 6, 2019"
4,5,"DO THIS COURSE. It brings together everything in part A. In particular, the final shorter week on the differences between Statically and dynamically typed languages is mind-bending and brilliant. ",By Julian M,"May 9, 2018"
5,5,"This entire course (A through C) is gold. Nothing to add, if you have the time, take it! Thanks so much to Dan an the team!",By Sean E,"Nov 6, 2018"
6,5,"Extremely enjoyable course! I wasn't exactly looking forward to using the Racket language --- I knew nothing about it, to be honest, but it really impressed me. A beautiful language. But the course is not really about the language used. It covers some interesting topics (delayed evaluation, streams, type systems) and contains two very nice homework assignments: the first is mostly focused on streams (which is actually quite a fun) and in the second one you implement an interpreter for a simple language that contains closures! ",By Lukáš H,"Mar 21, 2018"
7,5,"It's definitely harder than Part A - Racket with its LISP-like syntax was pretty daunting for me. I just can't imagine using it in production after using so many C-style languages, but I know that there are lots of Scheme and Clojure fans out there. But it was great to learn about dynamic typing, macros, and getting to deeply understand how interpreters work. That was a real wow moment!",By Greg G,"Mar 20, 2018"
8,5,"Fantastic sequel to the first course, it goes into a lot more functional programming idioms with Racket, and also reinforces old ideas. The second assignment where you write an interpreter will take a few days, but you'll understand how closures work in practice.I will say that Racket is very trippy, and it will take you deep into the FP jungle. Not everyone makes it out intact.",By Jack,"May 13, 2020"
9,5,"Courses I've taken on programming languages often focus on one language. You learn the different concepts for that one language but don't understand why the language chose those concepts and what the alternatives are. By covering three languages, this course integrates the concepts and their alternatives to give you a solid understanding of how languages work.   ",By Johnathan F,"Jan 15, 2018"
10,5,"I can't say enough good things about this course. Learned a ton from it! Although I doubt I will do a comprehensive amount of functional programming, I don't doubt that this course has consolidated the foundation of my ""imperative thinking"" and makes me a better Java/C++ programmer. Thanks Dan!非常喜欢Dan的讲课风格，让我对UW的好感大增！可惜，UW没有CS master的degree申请呀！",By Guo F,"Nov 15, 2019"
11,5,"Part B continues where Part A ended. The second programming assignment is really the heart of this Part, it is about implementing a small programming language yourself which gives a completely new view on the theoretical content so far. This is challenging and a lot of fun. If you liked Part A, you definetly need to continue your journey here.",By Thassilo H,"Nov 1, 2017"
12,5,Great course with really interesting and challenging assignments that allow to get more precise vision on programming languages (especially on PL's typing systems) and get experience with modern LISP ,By Anton Z,"Mar 25, 2018"
13,5,I'm a pretty experienced C/C++ programmer and this course has been a brilliant introduction into functional programming and the underlying philosophies underpinning programming languages in general.,By Keith R,"Mar 23, 2018"
14,5,amazing course. So many good things I don't know where to start. The whole series (a-b-c) is a joy to study. In particular the section on streams and infinite list is very fascinating.,By Daniele V,"Apr 1, 2020"
15,5,"Even more fun than the first one! I had heard about homework 5 before taking the courses, and I thought that implementing an interpreter for a made up programming language (MUPL!) was rather intimidating, and I had no idea whether or not I would be up to the task. I worked hard to finish everything as early as my schedule would allow, just to make sure I would have enough time to do homework 5. In the week leading to it, I was nervous and a bit confused about some parts of the task, and I watched some of the lectures multiple times before downloading the actual homework material and looking at it. In the end, it went rather smoothly, and I was surprised that I figured it out fairly quickly overall. It was really cool that until it was time to actually do it, I was worried about it, and then once I was done with it, I thought it wasn't so bad after all.I'm going to start part C now, and I'm excited about it.",By Jonathan F,"Apr 1, 2023"
16,5,"Very useful and challenging course. I love it but I have one comment.When I send the assignment the auto grade says that I have a problem with some function, but it make one of two things:1. give me the solution to my problem.2. tellm me what is the problem that he finds without giving me a test case that I fail to pass with my function.So I suggest when I have a wrong answer for sum function, to give the test case that I fail to pass. not give me the solution, or descripe what you find when you run. the description is not clear enough to detect the problem of the function.",By ِAhmed M,"Jul 30, 2023"
17,5,"A lot to absorb, but adds greatly to understanding of  language design, important functional programming.topics (e.g. closures and environments) evaluation topics (e.g., lazy evaluation) ever more recursion, and type systems.  Will I walk away with all of this learning permanently in my memory?  Probably not, but I will easily regain it when it arises, and importantly I will recognize when something calls for it.  Also, makes me conversant in the salient features of functional programming and allows seeing the forest better, not just the trees.",By John K,"Sep 23, 2022"
18,5,"An excellent continuation. Before this course, I thought macros was a scary idea. They still might be, but Dan introduces it in a very simple way. I appreciate how Dan always utilizes simple vocabulary to explain technical concepts. Unlike other instructors, Dan does not mindlessly overload with technical jargon as if that's the only way to communicate. That said, it's not a simple course! You will go through writing a small interpreter, learn what a macro is, lists and lisp.",By Jack Z,"May 3, 2021"
19,5,"Excellent content, and a very well-articulated and engaging instructor! The preceding course and this one are a fantastic resource for upping one's programming skills, style and learning about Functional Programming. They really open one's mind up about programming and programming languages, in general. The assignments are challenging, and it was a very rewarding experience to solve them.",By Srikanth C,"Sep 7, 2020"
20,5,"The racket language is a bit strange and takes a bit to get used to, however after doing the homework and listening to the videos you realize that the choice is a good one for this course. The second homework gives a good understanding of how closures and evaluation of functions really work.A lot of work, but the reward is well worth it.",By Henrik B,"Dec 23, 2017"
21,5,"Excellent course. Clear and enlightening lectures. Two solid programming assignments, which help with internalizing the topics covered in the course. The first covers things like closures, implementing laziness with closures, and using local state from closures for memoization. In the second we implement a basic lisp interpreter! ",By Jo,"May 24, 2019"
22,5,"The best teacher I've had chance to listen to. I've completed his corse on programming languages several years ago but always like to return and listen again. It's two things like good movie one can always return to and learn something new, or learn how to be a good teacher, and as Dan says: painting that fence. :)",By danijel k,"Nov 10, 2017"
23,5,"I really enjoyed learning Racket and comparing and contrasting it with ML. Studying different languages has really helped me understand the strengths and weaknesses of each. Writing the ""evaluator"" was the best part of the course. Thanks to Dan Grossman and everyone else who put this course together.",By Allison C,"Apr 10, 2018"
24,5,"Another Fantastic more of a journey than a course, from (in my opinion) one of the greatest teachers in th world. Thanks for everyone that helped letting this course come out to life. I shed tears (from happiness) when I finish every course taught by this teacher. It's an amazing experience.",By Anas S,"May 10, 2023"
25,5,The second assignment is challenging but very interesting. The task is to implement an interpreter in Racket for a made-up programming language with features like anonymous functions and function closures. Dan Grossman is an excellent teacher as well. I can't recommend this course enough.,By Renato P,"May 15, 2021"
26,5,"Excellent course, which continues where Part A left off. The use of Racket (dynamically typed) language, presents an interesting contrast with ML and drives home the point of some of the design decisions involved in language design. Thoroughly enjoyed implementing the sample interpreter.",By Krishna A,"Jul 29, 2017"
27,5,Excellent intro to a Lisp and functional programming in a dynamically typed language. Very hard but rewarding homework. It is worth the effort in my opinion to make you a better programmer if you are already one or to train you right from the beginning if you are new to it.,By Pablo A,"Mar 12, 2019"
28,5,"I watch the video lectures as supplements for a course I am taking at my university, which happens to be based on this course. I feel compelled to say that this is one of the best courses I have ever taken and Dan Grossman is the best instructor I have ever had.",By Jimmy C C,"Mar 17, 2020"
29,5,"Very good course. It helps contrast dynamically typed language such as Racket and a statically typed language such as ML to help me better understand the tradeoffs in language designing. In this sense, it makes me a better programmer in other languages. ",By Peilun D,"Jan 17, 2020"
30,5,"Fantastic course, a must for anyone serious or interested about programming. Challenging, but time really well spent: Course very well organized, quality videos by a very engaging professor, and very interesting with gradual complexity exercises",By Luiz C,"Jul 5, 2018"
31,5,"Great! A complement to Part A and it really uses things we've learned in Part A with the Standard ML language and does lots of comparisons, so you should probably take Part A if you have never used SML. Learned a lot with this course. Thanks!",By Juliano P,"Jun 29, 2020"
32,5,"An absolutely high quality class. The instruction is superb, the assignment is on par with top programs at Stanford, MIT, and CMU. Dr. Grossman's lecture is just so clear and energetic that makes learning this hard topic fun.",By John S,"Sep 14, 2016"
33,5,"I didn't terribly care about racket because of some previous common lisp/scheme experience; I wish the static/dynamic typing comparison had more space, but that's just because to ME that was the most interesting part.",By Lorenzo B,"Jul 3, 2020"
34,5,This course (as Part A and C) is great - Dan is great in teaching and the content is perfect for anyone who wants to learn more about programming languages!Warning - you might end up loving FP :),By Vaidas A,"Mar 19, 2018"
35,5,Great course! I learned the Racket programming language and functional programming in general.  I recommend it to everyone interested in programming. Assignments are interesting and fun.,By Dmytro F,"Jan 30, 2023"
36,5,"I took this course about 10 years off the college, and it was excellent refresher on the topics I don't use on a daily basis. Absolutely great lecturer, great videos and study materials!",By Jan H,"Dec 27, 2016"
37,5,"Thanks for this wonderful course. What I learned through this course really made me a much more efficient programmer, and it helped me to grasp new programming language a lot faster.",By Jiangnan T,"Dec 2, 2021"
38,5,"Great course! Learned more about PL, what is interpreter/ compiler language, what is statically typed/ dynamically typed. The homework is very rewarding! Looking forward to Part C.",By Yuji S,"Sep 26, 2016"
39,5,"Fantastic course on functional programming, programming languages, and type theory. Highly recommended. Dan is an amazing teacher and the course structure and pace is excellent.",By David H ,"Sep 28, 2021"
40,5,"A strong follow-up to Part A. The second week's homework assignment is quite difficult, but very rewarding. This course has greatly helped shape my views on programming.",By Sam S,"Apr 2, 2020"
41,5,Excelent course.! Wished contained more material. Also I think changing the editor from Emacs to Dr Racket was not really necessary... all in all excellent course!,By Jose J,"Aug 16, 2020"
42,5,Just as good as the first segment of the course. Learned a lot of good material about dynamically vs statically typed languages and how languages are interpreted.,By Jacob K,"Jul 6, 2018"
43,5,"Very enjoyable course, follow-up to Part A. Building an interpreter really solidifies what we saw, a really nice exercise. I'll definitely move on to part C!",By Pedro d S Q,"Aug 13, 2020"
44,5,I'll learn many things in this course with the enthusiasm and hard work of a very knowledgeable professor on the field. Great course 10/10 would do it again.,By Gabriel A S,"Jul 18, 2020"
45,5,This series is really the course you need to take if you feel not comfortable and want to know why(or describe the feelings) when you code in school or work.,By Kevin X,"Dec 18, 2016"
46,5,Thiscoursewasfantastic.Gives a very good introduction to functional programming in dynamic language by focusing on the fundamentals. Highly recommended!!,By Paramjot S,"Oct 19, 2020"
47,5,The course is really fantastic! It leads me to the world of Racket programming and guides me to many concepts in programming language theory (PLT).,By Yuchong P,"Jun 2, 2017"
48,5,Suitable even for experienced programmers.Excellent presentation of fundamental programming concepts.  Exercises are challenging but rewarding.,By Peter B,"Mar 13, 2017"
49,5,The programming assignments are carefully designed such that without so much coding you can capture the essence of the idea. Highly recommend.,By Xiangyu G,"Jul 27, 2017"
50,5,"It's challenging as much as it is rewarding, and the peer review is a very nice arrangement for people to see how others are doing things!",By Anran,"Mar 7, 2020"
51,5,"Great follow-up to Part A, really builds on the concepts introduced there and tackles some quite complex topics (writing an interpreter)!",By Iris H,"Nov 23, 2019"
52,5,"Really good course, hope I can get content of this high quality in my own university. Programming language Theory is really beautiful.",By Yuxing C,"Feb 11, 2021"
53,5,This course presents a beautiful contrast between static and dynamic Type Systems. Week's 2 homework is challenging and rewarding.,By Orlando L,"Oct 9, 2021"
54,5,"If you really wanna get what programming languages are about, give this one a whirl! Great homework assignments and solid videos.",By Maximilian P,"Jan 11, 2021"
55,5,"The latter half of this course is much harder than the former, but there are still knowledge I can understand. Next step, Part C",By David X,"Feb 4, 2021"
56,5,"Awesome course, a lot of fun with really interesting exercises. The interpreter homework was both difficult and super rewarding.",By Kyle K,"Jul 13, 2020"
57,5,A good introduction to dynamically typed language. I really the discussion about the static checking and dynamic checking.,By syoya,"May 20, 2020"
58,5,Awesome course for programmer's interested in learning programming idioms or otherwise interested in language design,By Sunil B,"Mar 19, 2018"
59,5,I've learned so much in doing this courses. I can not recommend them enough. Dan is a brilliant teacher too.,By Mike A,"Apr 25, 2021"
60,5,It's hard not to see how much time and energy is spent on this course by the instructor and the team!,By Stanislav K,"Jul 7, 2017"
61,5,Worth your time for gaining a deeper insight of programming language. So challenging and intriguing!,By Khôi Đ M,"Dec 13, 2021"
62,5,Parenthesising expressions has never been more fun. And you get to implement your own Lisp dialect.,By Hristo I,"Oct 26, 2020"
63,5,"Lovely course!  The treatment on closures was great, and I really enjoyed the programming exercise.",By Dario G,"Nov 17, 2016"
64,5,the best online course I've ever taken! expecting more courses from Dan and Washington University ,By Cheng H,"Dec 16, 2018"
65,5,"Great course to learn dynamic typed language, and implemented a interpreter on a small language.",By Morton L,"Mar 24, 2020"
66,5,The assignment is challenging. This course gives a very good idea of how an interpreter works.,By Suchith J N,"Feb 2, 2017"
67,5,Better than the first one has we get more into the theory which is super useful!:)Thanks Dan!,By Jayadev H,"Oct 16, 2019"
68,5,I really enjoy the course and like how Dan explains everything. Very thoroughly and clear!,By Oleksandr O,"Sep 18, 2017"
69,5,Fairly tough assignments but a great course!!Need more courses from Prof Dan Grossman.,By Pritesh S,"Feb 26, 2021"
70,5,"Very interesting and challenging course. One of the best courses on Cousera, for sure.",By anton k,"Jan 10, 2018"
71,5,excellent! vey helpful for ungraduates and programmer! need time to understand truly.,By lander,"Sep 4, 2017"
72,5,One of the Best course I have ever taken. A great many of concrete examples. Thanks!,By Yifeng M,"Jul 14, 2017"
73,5,"Great course, I have learned a lot. The assignments are challenging and rewarding. ",By Sony,"Aug 21, 2020"
74,5,"Solidified my understanding of many confusing topics, such as delayed evaluation.",By steve b,"Apr 19, 2021"
75,5,"Very hard and challenging, definitely worth it if you like to challenge yourself",By Ahmad H,"Dec 22, 2021"
76,5,It is great fun to learn Racket and use it to implement an interpreter for MUPL.,By Cheng Z,"Jun 3, 2017"
77,5,Amazing course!!! Excellent lecturer!! Really learn a lot of PL and Racket. ,By Kevin Z,"Aug 16, 2018"
78,5,Excellent course that introduced me to the field of programming languages.,By Shreck Y,"Jan 8, 2021"
79,5,excellent. not much to add to what has already been said in other reviews.,By Luis G,"Jan 1, 2020"
80,5,The assignment is a bit hard but worthwhile if you manage to finish it ,By Adel F,"Oct 12, 2020"
81,5,Part B of a 3 part course. One of the best i have taken up on Coursera,By Abhik K,"Nov 2, 2016"
82,5,More difficult than part A but also more rewarding. Thanks Prof. Dan!,By Shiyang L,"Jan 15, 2017"
83,5,"One of the best course on coursera, every cs student should take it.",By Ling J,"Apr 18, 2018"
84,5,Great Course.The interpreter homework is challenging and rewarding.,By Xusheng Z,"Apr 26, 2021"
85,5,One of the best courses on the subject I ever had a chance to see. ,By Ivan V,"Oct 20, 2017"
86,5,I learn lots of important programming language concepts from here.,By walker,"Sep 11, 2016"
87,5,Some tasks were very challenging but the course is really awesome,By Oleg K,"Jan 16, 2019"
88,5,Learned a lot. Fall in love with PL because of this course!,By Yuhang W,"Mar 9, 2020"
89,5,Dan is awesome! It is best to take part a to c in sequence,By Tang H T,"Jan 14, 2019"
90,5,Dan Grossman is a really amazing teacher! Learnt a lot! :),By Suvrat A,"Sep 24, 2016"
91,5,"Awesome, easily on par with PLA. Looking forward to PLC!",By Daniel K,"Sep 14, 2022"
92,5,Great course on Racket. Fun writing your own interpreter.,By Deleted A,"Oct 3, 2016"
93,5,Good course with interesting and challenging assignments,By Andrii D,"Jan 27, 2019"
94,5,great experience using racket writing a toy interpreter!,By dynasty919,"Feb 22, 2018"
95,5,"Excellent course, hope to use  Haskell  language later.",By 蔡小邦,"Jul 19, 2017"
96,5,This course expands on the concepts learnt from Part A. ,By Nester P,"Jun 5, 2017"
97,5,Outstanding course. with a decent grade of difficulty.,By Orlando R L,"Dec 30, 2022"
98,5,A great course and It really complements well Part A.,By Denis K,"Apr 12, 2018"
99,5,Incredible continuation of an already amazing course.,By Eduardo C R,"Dec 2, 2016"
100,5,"good course, writing an interpreter in racket was fun",By Noah P,"Sep 20, 2016"
101,5,Very good course for cementing programming concepts.,By Ernst G,"Mar 28, 2019"
102,5,"Has to be the best online course, I have ever taken.",By Berin L,"Jan 9, 2019"
103,5,"Very helpful course, help me learn a lot about CS",By George Z,"Apr 23, 2020"
104,5,Not as good as part (a). But still a great class!,By Brian W,"May 6, 2017"
105,5,  Fantastic course - it's real computer science  ,By Sam R,"May 24, 2021"
106,5,"Excellent exposition, enriching assignments.",By Paul H,"Sep 29, 2020"
107,5,"Very useful, and I will continue with part C",By Diego E H G,"Sep 7, 2018"
108,5,One of the best course in any MOOC format,By rashid K,"May 6, 2019"
109,5,So Great! I will keep learning the SICP!,By Jediii,"Mar 18, 2020"
110,5,very good but found week 6 hw very hard,By Abdelrhman A,"Oct 3, 2020"
111,5,Very taxing but very much worth it.,By Tega E,"Apr 27, 2019"
112,5,this is really a rewarding course!,By Zack W,"Aug 18, 2019"
113,5,great lecture for learning program,By Tian,"Jun 18, 2017"
114,5,这一部分果然比第一部分难，可是非常有意思。学到了很多有意思的东西。,By replper,"Mar 9, 2017"
115,5,interesting to program in racket,By Hector L,"Aug 14, 2017"
116,5,I enjoyed (and learned) a lot!,By Marek N,"Jul 16, 2017"
117,5,"Great course, learned a ton!",By Rafi R,"Dec 8, 2021"
118,5,Learned a lot and enjoyed it!,By Maria L V,"May 11, 2018"
119,5,"challenging, insightful, fun!",By Jeff T,"Mar 22, 2018"
120,5,Perfect course series for me!,By Alexandr A,"Sep 23, 2016"
121,5,awesome course that teach PL,By Deleted A,"Dec 29, 2017"
122,5,诚意推荐此课程作业，完成之后继续诚意推荐SICP。　,By GoForce5500,"Oct 16, 2017"
123,5,Dan is an amazing teacher.,By Devendra,"Sep 5, 2017"
124,5,Even better than part A!,By Diego F,"Aug 2, 2021"
125,5,A very excellent course!,By Yu Y,"Dec 31, 2020"
126,5,Thank you prof.Grossman!,By Blaž P,"Mar 11, 2020"
127,5,"Very, very good course.",By Jeroen J,"Sep 19, 2023"
128,5,非常好的课程，能够深入理解编程思想，值得学习~,By 刘洋,"Jul 2, 2017"
129,5,I enjoyed this course.,By Georgios G,"Jan 12, 2023"
130,5,Very good and useful!,By Wentao Y,"Jun 9, 2017"
131,5,A wonderful course!,By Yifan C,"Dec 12, 2021"
132,5,wonderful experience ,By Meng L,"Dec 29, 2016"
133,5,It's fabulous !!!!!,By jozon a,"Mar 13, 2022"
134,5,fantastic course!,By Justin K,"Sep 13, 2022"
135,5,Can no be better!,By 白旭,"Feb 2, 2021"
136,5,Excellent course!,By Adetokunbo A,"Jan 24, 2020"
137,5,Highly recommend.,By Jürgen B,"Sep 1, 2019"
138,5,very good course!,By 郑,"Dec 13, 2017"
139,5,  Very good course  ,By Wang G,"Aug 13, 2019"
140,5,Dan is so cool!,By Jin X,"Sep 12, 2018"
141,5,interesting!!!!,By 张家培,"Mar 16, 2017"
142,5,AMAZING COURSE!,By Shaohao Z,"Sep 21, 2016"
143,5,Outstanding!,By Sorin J,"Aug 21, 2020"
144,5,great course,By Dingze W,"Jul 26, 2018"
145,5,very good!!!,By Fry,"Sep 24, 2017"
146,5,TOP course.,By Sebastijan P,"Mar 8, 2019"
147,5,Excellent!,By Alejandro M,"Nov 21, 2016"
148,5,Fabulous.,By Ahmed R,"Sep 5, 2023"
149,5,wonderful,By 彭福伟,"Sep 28, 2016"
150,5,Awesome!,By Juspreet S,"Feb 7, 2017"
151,5,Great !,By Marc,"Aug 19, 2020"
152,5,Great!,By Devin,"Dec 7, 2017"
153,5,nice,By shengrang,"Dec 19, 2016"
154,5,O,By Dheimersão B E,"Oct 13, 2020"
155,5,G,By Ivan T,"Jun 24, 2017"
156,4,The MUPL exercise was hard. It involved writing a Racket interpreter for a made up programming language (MUPL).,By Gregory G,"Jan 11, 2022"
157,4,"I think the course should be deeper and the assignment should be harder. Anyway, thanks for your effort!",By alfred,"Jan 15, 2020"
158,4,the course material was good! but the discussion forum was not so active. ,By Atsushi,"Jan 6, 2019"
159,4,Excellent course material. Homework is a bit esoteric though.,By Deleted A,"Oct 4, 2016"
160,4,"I learned a lot from this course, thank you.",By 刘长通,"Sep 27, 2016"
161,4,great course,By Wai K W,"Jan 16, 2021"
162,4,Good,By Venkatesh D,"Feb 5, 2017"
163,3,Showed a bit of Racket but could have done more. The ML part seemed to have more depth,By Mark B,"Jan 11, 2021"
164,3,i am not interested in this course i want unenroll this course,By Naresh,"Oct 15, 2020"
165,3,unfortunately all the solutions for the homework are online. ,By jan s,"Jan 14, 2019"
